--- a/RunBundler.py
+++ b/RunBundler.py
@@ -1,16 +1,21 @@
+#!/usr/bin/python -u
 import logging
 import osmbundler
 
 logging.basicConfig(level=logging.INFO, format="%(message)s")
 
-# initialize OsmBundler manager class
-manager = osmbundler.OsmBundler()
+def main():
+	"""Main function: 	
+	initialize OsmBundler manager class
+	and run Bundler pipeline
+	"""
+	manager = osmbundler.OsmBundler()
+	manager.preparePhotos()
+	manager.matchFeatures()
+	manager.doBundleAdjustment()
+	manager.openResult()
 
-manager.preparePhotos()
+if __name__ == '__main__':
+	main()
 
-manager.matchFeatures()
-
-manager.doBundleAdjustment()
-
-manager.openResult()
 
--- a/RunCMVS.py
+++ b/RunCMVS.py
@@ -1,13 +1,20 @@
+#!/usr/bin/python -u
+
 import logging
 import osmcmvs
 
 logging.basicConfig(level=logging.INFO, format="%(message)s")
 
-# initialize OsmCMVS manager class
-manager = osmcmvs.OsmCmvs()
+def main():
+	"""Main function"""
+	# initialize OsmCMVS manager class
+	manager = osmcmvs.OsmCmvs()
+	# initialize PMVS input from Bundler output
+	manager.doBundle2PMVS()
+	# call PMVS
+	manager.doCMVS()
+
+if __name__ == '__main__':
+	main()
 
-# initialize PMVS input from Bundler output
-manager.doBundle2PMVS()
 
-# call PMVS
-manager.doCMVS()
--- a/RunPMVS.py
+++ b/RunPMVS.py
@@ -1,13 +1,20 @@
+#!/usr/bin/python -u
+
 import logging
 import osmpmvs
 
 logging.basicConfig(level=logging.INFO, format="%(message)s")
 
-# initialize OsmPMVS manager class
-manager = osmpmvs.OsmPmvs()
-
-# initialize PMVS input from Bundler output
-manager.doBundle2PMVS()
+def main():
+	"""Main function:
+	run osmpmvs pipeline
+	"""
+	# initialize OsmPMVS manager class
+	manager = osmpmvs.OsmPmvs()
+	# initialize PMVS input from Bundler output
+	manager.doBundle2PMVS()
+	# call PMVS
+	manager.doPMVS()
 
-# call PMVS
-manager.doPMVS()
+if __name__ == '__main__':
+	main()
